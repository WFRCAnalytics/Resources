<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>citilabscubevoyager</string>
		<string>ncitilabscubevoyager</string>
		<string>ycitilabscubevoyager</string>
		<string>inc</string>
		<string>s</string>
	</array>
	<key>name</key>
	<string>Citilabs Cube Voyager</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#registers</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#mnemonics</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#constants</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#entities</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#support</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#preprocessor</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(;|(^|\s)#\s).*$</string>
					<key>name</key>
					<string>comment.line</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*[\#%]\s*if\s+0\b</string>
					<key>end</key>
					<string>^\s*[\#%]\s*endif\b</string>
					<key>name</key>
					<string>comment.preprocessor</string>
				</dict>
			</array>
		</dict>
		<key>constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(ARRAY|ACCESSMODES|ADJUST|ALLJ|ADDTOGROUP|ABORT|AVE|AVEX0|APPEND|ANSWER|BREAK|BUILDPATHS|BLOCK|BOARDPEN|BALANCE|COMPARE|COST|COMP|CAPACITYFOR|CROSSTAB|CONTINUE|COMBINE|COSTDEC|CSV|CFORM|CAPACITY|CHOICE|DELETE|DATAPREP|DUPLICATES|DEADLINKS|ELSEIF|ENDIF|ELSE|ENDLOOP|ENDJLOOP|EXCLUDE|EXCLUDEJ|ENDPHASE|ENDLINKLOOP|EXCLUDERECI|FILE|FILEI|FILEO|FREQUENCY|FUNCTION|FARE|FORMAT|FORM|FREQPERIOD|FFACTORS|FULLPATH|GENERATE|GRAVITY|GLOBAL|GAP|HDWAYPERIOD|HWYTIME|ILOOP|IF|INCLUDE|INPUT|INTERPOLATE|IWAITMAX|IWAITFAC|INCLUDECOST|J|JLOOP|JUNCTIONI|JUNCTIONO|KFACTORS|LOG|LOOKUP|LOOP|LINKI|LINKO|LINKREAD|LINKMERGE|LINE|LINK|LIST|LISTINPUT|LINKLOOP|LOOKUPI|LOSRANGE|MATI|MATO|MERGE|MW|MO|MODEFAC|MAXPATHTIME|MATRICES|MAXITERS|MIN|MAX|MAXRMSE|NETI|NODEI|NETO|NODEO|NODEMERGE|NOACCESS|NAME|PRINT|PRINTROW|PATHLOAD|PATHO|PATHOGROUP|PATHTRACE|PARAMETERS|PHASE|PNR|PATH|PAGEHEIGHT|PAO|PRINTO|PROMPT|QUESTION|REPORT|RENUMBER|RENAME|RECORD|ROUND|RMSE|RECI|RECO|RESULT|SETPA|SPDCAP|SPEEDFOR|SET|SETUP|SUMMARY|SUPPLINK|SUPPORT|SUPPORTO|SPEED|SELECT|START|STOP|TRANTIME|TURNPENI|TURNVOLO|TURNS|TC|TRIPS|TIME|TRACE|TRIPSXY|UNCONNECTED|VOL|VAR|XFERGEN|XY|XPEN|XWAITMAX|XWAITFAC|XFARE|WALKSPEED|ZDATI|ZDATO|ZONES|ZONEACCESS|ZONEMSG|if|else|elseif|endif|i|j|v|V|mw|mi|mo|zi|zo|li|lo|lw|ROWSUM|LINKCLASS|DEC|CONSOLIDATE|PENI|EXCLUDEGROUP)\b</string>
					<key>name</key>
					<string>variable.other</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b\d+\b</string>
					<key>name</key>
					<string>string</string>
				</dict>
				<dict>
					<key>match</key>
					<string>'(?<=\[)[^)]*(?=\])'</string>
					<key>name</key>
					<string>string</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>@</string>
					<key>end</key>
					<string>@</string>
					<key>name</key>
					<string>entity.name.tag</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(DISTRIBUTION|ENDRUN|FRATAR|GENERATION|HWYLOAD|HWYNET|HIGHWAY|MATRIX|NETWORK|PGM|PUBLIC|RUN|TRNBUILD|TRIPDIST|TRANSPORT|WAIT4FILES|FILES|DistributeMULTISTEP|PROCESSID|PROCESSNUM|EndDistributeMULTISTEP|MSG|DistributeINTRASTEP|PROCESSLIST|CheckReturnCode|')</string>
					<key>name</key>
					<string>invalid.illegal</string>
				</dict>
			</array>
		</dict>
		<key>entities</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>notfound</string>
					<key>name</key>
					<string>constant.numeric</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#mnemonics-general-purpose</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-fpu</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-mmx</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-sse</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-sse2</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-sse3</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-sse4</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-aesni</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-avx</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-avx2</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-tsx</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-system</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-64bit</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-vmx</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-smx</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-intel-isa-sgx</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-intel-isa-mpx</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-intel-isa-sha</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-supplemental-amd</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-supplemental-cyrix</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-supplemental-via</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-undocumented</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-future-intel</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mnemonics-pseudo-ops</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-64bit</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>testtest</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.64-bit-mode</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-aesni</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(aes((dec|enc)(last)?|imc|keygenassist)|pclmulqdq)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.aesni</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-avx</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(v((test|permil|maskmov)p[ds]|zero(all|upper)|(perm2|insert|extract|broadcast)f128|broadcasts[ds]))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.avx</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-avx2</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(v((broadcast|extract|insert|perm2)i128|pmaskmov[dq]|perm([dsq]|p[sd])))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.avx2.promoted.simd</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-fpu</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(fcmov(n?([beu]|be)))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.fpu.data-transfer.mov</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-future-intel</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#mnemonics-future-intel-avx512</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-future-intel-avx512</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(vblendm(pd|ps)|vpblendm[bdqw])\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.avx512.blend</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-future-intel-cet</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b((inc|save|rstor)ssp|wru?ss|(set|clr)ssbsy|endbranch|endbr(32|64))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.cet</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-future-intel-opmask</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(k(add|andn?|(xn?)?or|mov|not|(or)?test|shift[lr])[bdqw]|kunpck(bw|wd|dq))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.opmask</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-future-intel-other</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(clflushopt|clwb|pcommit)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.other</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-general-purpose</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(?:mov(?:[sz]x)?|cmov(?:n?[abceglopsz]|n?[abgl]e|p[eo]))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.general-purpose.data-transfer.mov</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-intel-isa-mpx</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(bnd(mk|c[lnu]|mov|ldx|stx))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.mpx</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-intel-isa-sgx</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\be(add|block|create|dbg(rd|wr)|extend|init|ld[bu]|pa|remove|track|wb)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sgx1.supervisor</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\be(enter|exit|getkey|report|resume)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sgx1.user</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\be(aug|mod(pr|t))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sgx2.supervisor</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\be(accept(copy)?|modpe)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sgx2.user</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-intel-isa-sha</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(sha(1rnds4|256rnds2|1nexte|(1|256)msg[12]))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sha</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-invalid</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#mnemonics-invalid-amd-sse5</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-invalid-amd-sse5</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(com[ps][ds]|pcomu?[bdqw])\b</string>
					<key>name</key>
					<string>invalid.keyword.operator.word.mnemonic.sse5.comparison</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(cvtp(h2ps|s2ph)|frcz[ps][ds])\b</string>
					<key>name</key>
					<string>invalid.keyword.operator.word.mnemonic.sse5.conversion</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(fn?m((add|sub)[ps][ds])|ph(addu?(b[dqw]|w[dq]|dq)|sub(bw|dq|wd))|pma(css?(d(d|q[hl])|w[dw])|dcss?wd))\b</string>
					<key>name</key>
					<string>invalid.keyword.operator.word.mnemonic.sse5.packed-arithmetic</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(pcmov|permp[ds]|pperm|prot[bdqw]|psh[al][bdqw])\b</string>
					<key>name</key>
					<string>invalid.keyword.operator.word.mnemonic.sse5.simd-integer</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-mmx</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(mov[dq])\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.mmx.data-transfer</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(pack(ssdw|[su]swb)|punpck[hl](bw|dq|wd))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.mmx.conversion</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(p(((add|sub)(d|(u?s)?[bw]))|maddwd|mul[lh]w))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.mmx.packed-arithmetic</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(pcmp((eq|gt)[bdw]))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.mmx.comparison</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(pandn?|px?or)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.mmx.logical</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(ps([rl]l[dwq]|raw|rad))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.mmx.shift-and-rotate</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(emms)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.mmx.state-management</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-pseudo-ops</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(cmp(n?(eq|lt|le)|(un)?ord)[ps][ds])\b</string>
					<key>name</key>
					<string>keyword.pseudo-mnemonic.sse2.compare</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(v?pclmul([hl]q[hl]q|[hl]qh)dq)\b</string>
					<key>name</key>
					<string>keyword.pseudo-mnemonic.avx.promoted.aes</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(vcmp(eq(_(os|uq|us))?|neq(_(oq|os|us))?|[gl][et](_oq)?|n[gl][et](_uq)?|(un)?ord(_s)?|false(_os)?|true(_us)?)[ps][ds])\b</string>
					<key>name</key>
					<string>keyword.pseudo-mnemonic.avx.promoted.comparison</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(vpcom(n?eq|[gl][et]|false|true)(b|uw))\b</string>
					<key>name</key>
					<string>keyword.pseudo-mnemonic.supplemental.amd.xop.simd</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-smx</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(getsec)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.smx.getsec</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(capabilities|enteraccs|exitac|senter|sexit|parameters|smctrl|wakeup)\b</string>
					<key>name</key>
					<string>support.constant</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-sse</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(mov(([ahlu]|hl|lh|msk)ps|ss))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse.data-transfer</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b((add|div|max|min|mul|rcp|r?sqrt|sub)[ps]s)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse.packed-arithmetic</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(cmp[ps]s|u?comiss)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse.comparison</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b((andn?|x?or)ps)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse.logical</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b((shuf|unpck[hl])ps)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse.shuffle-and-unpack</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(cvt(pi2ps|si2ss|ps2pi|tps2pi|ss2si|tss2si))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse.conversion</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b((ld|st)mxcsr)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse.state-management</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(p(avg[bw]|extrw|insrw|(max|min)(sw|ub)|sadbw|shufw|mulhuw|movmskb))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse.simd-integer</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(maskmovq|movntps|sfence)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse.cacheability-control</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(prefetch(nta|t[0-2]|w(t1)?))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse.prefetch</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-sse2</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(mov([auhl]|msk)pd)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse2.data-transfer</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b((add|div|max|min|mul|sub|sqrt)[ps]d)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse2.packed-arithmetic</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b((andn?|x?or)pd)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse2.logical</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b((cmpp|u?comis)d)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse2.compare</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b((shuf|unpck[hl])pd)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse2.shuffle-and-unpack</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(cvt(dq2pd|pi2pd|ps2pd|pd2ps|si2sd|sd2ss|ss2sd|t?(pd2dq|pd2pi|sd2si)))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse2.conversion</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(cvt(dq2ps|ps2dq|tps2dq))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse2.packed-floating-point</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(mov(dq[au]|q2dq|dq2q))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse2.simd-integer.mov</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(p((add|sub|(s[lr]l|mulu|unpck[hl]q)d)q|shuf(d|[hl]w)))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse2.simd-integer.other</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(clflush|[lm]fence|pause|maskmovdqu|movnt(dq|i|pd))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse2.cacheability-control</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-sse3</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(fisttp|lddqu|(addsub|h(add|sub))p[sd]|mov(sh|sl|d)dup|monitor|mwait)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(ph(add|sub)(s?w|d))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse3.supplimental.horizontal-packed-arithmetic</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(p((abs|sign)[bdw]|maddubsw|mulhrsw|shufb|alignr))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse3.supplimental.other</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-sse4</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(pmul(ld|dq)|dpp[ds])\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.sse4.1.arithmetic</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-supplemental-amd</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(bl([cs](fill|ic?|msk)|cs)|t1mskc|tzmsk)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.supplemental.amd.general-purpose</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-supplemental-cyrix</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b((sv|rs)dc|(wr|rd)shr|paddsiw)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.supplemental.cyrix</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-supplemental-via</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(montmul)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.supplemental.via</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(x(store(rng)?|crypt(ecb|cbc|ctr|cfb|ofb)|sha(1|256)))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.supplemental.via.padlock</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-system</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b((cl|st)ac|[ls]([gli]dt|tr|msw)|clts|arpl|lar|lsl|ver[rw]|inv(d|lpg|pcid)|wbinvd)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.system</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(lock|hlt|rsm|(rd|wr)(msr|pkru|[fg]sbase)|rd(pmc|tscp?)|sys(enter|exit))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.system</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(x((save(c|opt|s)?|rstors?)(64)?|[gs]etbv))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.system</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-tsx</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(x(abort|acquire|release|begin|end|test))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.tsx</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-undocumented</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(ret[nf]|icebp|int1|int03|smi|ud1)\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.undocumented</string>
				</dict>
			</array>
		</dict>
		<key>mnemonics-vmx</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(vm(ptr(ld|st)|clear|read|write|launch|resume|xo(ff|n)|call|func)|inv(ept|vpid))\b</string>
					<key>name</key>
					<string>keyword.operator.word.mnemonic.vmx</string>
				</dict>
			</array>
		</dict>
		<key>preprocessor</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^\s*[#%]\s*(error|warning)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.import.error.c</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.preprocessor.diagnostic.c</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&gt;\\\s*\n)</string>
							<key>name</key>
							<string>punctuation.separator.continuation.c</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*[#%]\s*(include|import)\b\s+</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.import.include.c</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=(?://|/\*))|$</string>
					<key>name</key>
					<string>meta.preprocessor.c.include</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&gt;\\\s*\n)</string>
							<key>name</key>
							<string>punctuation.separator.continuation.c</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>"</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.c</string>
								</dict>
							</dict>
							<key>end</key>
							<string>"</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.c</string>
								</dict>
							</dict>
							<key>name</key>
							<string>string.quoted.double.include.c</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>&lt;</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.c</string>
								</dict>
							</dict>
							<key>end</key>
							<string>&gt;</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.c</string>
								</dict>
							</dict>
							<key>name</key>
							<string>string.quoted.other.lt-gt.include.c</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*[%#]\s*((xi?)?define|defined|elif(def)?|else|if(macro|ctx|idni?|num|str)?|ifn?def|line|(end)?macro|pragma|undef|endif)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.import.c</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=(?://|/\*))|$</string>
					<key>name</key>
					<string>meta.preprocessor.c</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&gt;\\\s*\n)</string>
							<key>name</key>
							<string>punctuation.separator.continuation.c</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*[#%]\s*(assign|strlen|substr|(end|exit)?rep|push|pop)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.preprocessor.ncitilabscubevoyager</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&gt;\\\s*\n)</string>
							<key>name</key>
							<string>punctuation.separator.continuation.c</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>registers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(?:[abcd][hl]|[er]?[abcd]x|[er]?(?:di|si|bp|sp)|dil|sil|bpl|spl|r(?:8|9|1[0-5])[bdlw]?)\b</string>
					<key>name</key>
					<string>constant.language.register.general-purpose.citilabscubevoyager.x86_64</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?:[cdefgs]s)\b</string>
					<key>name</key>
					<string>constant.language.register.segment.citilabscubevoyager.x86_64</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?:[er]?flags)\b</string>
					<key>name</key>
					<string>constant.language.register.flags.citilabscubevoyager.x86_64</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?:[er]?ip)\b</string>
					<key>name</key>
					<string>constant.language.register.instruction-pointer.citilabscubevoyager.x86_64</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?:cr[02-4])\b</string>
					<key>name</key>
					<string>constant.language.register.control.citilabscubevoyager.x86_64</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?:(?:mm|st|fpr)[0-7])\b</string>
					<key>name</key>
					<string>constant.language.register.mmx.citilabscubevoyager.x86_64</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?:[xy]mm(?:[0-9]|1[0-5])|mxcsr)\b</string>
					<key>name</key>
					<string>constant.language.register.sse_avx.citilabscubevoyager.x86_64</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?:zmm(?:[12]?[0-9]|30|31))\b</string>
					<key>name</key>
					<string>constant.language.register.avx512.citilabscubevoyager.x86_64</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?:bnd(?:[0-3]|cfg[su]|status))\b</string>
					<key>name</key>
					<string>constant.language.register.memory-protection.citilabscubevoyager.x86_64</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?:(?:[gil]dt)r?|tr)\b</string>
					<key>name</key>
					<string>constant.language.register.system-table-pointer.citilabscubevoyager.x86_64</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?:dr[0-367])\b</string>
					<key>name</key>
					<string>constant.language.register.debug.citilabscubevoyager.x86_64</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?:cr8|dr(?:[89]|1[0-5])|efer|tpr|syscfg)\b</string>
					<key>name</key>
					<string>constant.language.register.amd.citilabscubevoyager.x86_64</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?:db[0-367]|t[67]|tr[3-7]|st)\b</string>
					<key>name</key>
					<string>invalid.deprecated.constant.language.register.citilabscubevoyager.x86_64</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b[xy]mm(?:1[6-9]|2[0-9]|3[01])\b</string>
					<key>name</key>
					<string>constant.language.register.general-purpose.alias.citilabscubevoyager.x86_64</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.citilabscubevoyager</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.citilabscubevoyager</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.citilabscubevoyager</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string_placeholder</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.citilabscubevoyager</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.citilabscubevoyager</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.citilabscubevoyager</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string_placeholder</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>`</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.citilabscubevoyager</string>
						</dict>
					</dict>
					<key>end</key>
					<string>`</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.citilabscubevoyager</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.backquote.citilabscubevoyager</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string_placeholder</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>support</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(?:s?byte|(?:[doqtyz]|dq|s[dq]?)?word|(?:d|res)[bdoqtwyz]|ddq)\b</string>
					<key>name</key>
					<string>storage.type.citilabscubevoyager.x86_64</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.citilabscubevoyager.x86_64</string>
	<key>uuid</key>
	<string>05d6565d-991a-4e88-8e28-63bb21197f32</string>
</dict>
</plist>
